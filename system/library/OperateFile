<?php

/***********************************************************************************************
	文件操作类
	1、实现了文件的建立，写入，删除，修改，复制，移动，创建目录，删除目录、列出目录里的文件等功能
	2、路径后面别忘了加"/"
 
	@author    iProg
************************************************************************************************/

class FileOperation {

 	/*-------------------------------------------------------------------------------------------
	| 创建目录
	|--------------------------------------------------------------------------------------------
	| @param string $dir
	-------------------------------------------------------------------------------------------*/ 
	public function createDir($dir) {

	        $dir = str_replace('', '/', $dir);
	        $aimDir = '';
	        $dirArr = explode('/', $dir);
	
	        foreach ($dirArr as $d) {
	            $aimDir .= $d . '/';
	            if (!file_exists($aimDir)) {
	            	mkdir($aimDir);
			chmod($aimDir, 0777);
	            }
	        }
	
	        return;
	}


        /*-------------------------------------------------------------------------------------------
	| 删除目录
	|--------------------------------------------------------------------------------------------
	| @param string $dir
	-------------------------------------------------------------------------------------------*/ 
	public function deleteDir($dir) {
	        $dir = str_replace('', '/', $dir);
	        $dir = substr($dir, -1) == '/' ? $dir : $dir . '/';
	        if (!is_dir($dir)) {
	            return false;
	        }
	        $dirHandle = opendir($dir);
	        while (false !== ($file = readdir($dirHandle))) {
	            if ($file == '.' || $file == '..') {
	                continue;
	            }
	            if (!is_dir($dir . $file)) {
	                $this->deleteFile($dir, $file);
	            } else {
	                $this->deleteDir($dir . $file);
	            }
	        }
	        closedir($dirHandle);
	        return rmdir($dir);
	}

        /*-------------------------------------------------------------------------------------------
	| 本方法用来在path目录下创建name文件
	|--------------------------------------------------------------------------------------------
	| @param string path         路径名称，后面别忘了加"/"
	| @param string name         文件名字
	| @param string isOverWrite  是否覆盖源文件
	--------------------------------------------------------------------------------------------*/ 
	public function createFile($path, $name, $isOverWrite = false) {
		$filename = $path . $name;

	        if (file_exists($filename) && $isOverWrite == false) {
	            return false;
	        } elseif (file_exists($filename) && $isOverWrite == true) {
	            $this->deleteFile($filename);
	        }
	
	        $this->createDir($path);
	        touch($filename);
	        return true;
    	}

	/*------------------------------------------------------------------------------------------
	| 删除文件
	|-------------------------------------------------------------------------------------------
	| @param string path         路径后面别忘了加"/"
	| @param string name         文件名字
	| @return boolean
	------------------------------------------------------------------------------------------*/
	function deleteFile($path, $name) {
	    	$filename = $path . $name;
	
	        if (file_exists($filename)) {
	            unlink($filename);
	            return true;
	        } else {
	            return false;
	        }
	}

        /*-----------------------------------------------------------------------------------------
	| 获取文件内容
	|------------------------------------------------------------------------------------------
	| @param string path        文件路径,路径后面别忘了加"/"
	| @param string name        文件名字
	| @return string content    文件内容
	-----------------------------------------------------------------------------------------*/
	public function readFile($path, $name) {
		return file_get_contents($path . $name);
	}

	/*-----------------------------------------------------------------------------------------
	| 本方法用来写文件，向path路径下name文件写入content内容
	|------------------------------------------------------------------------------------------
	| @param string path       文件路径
	| @param string name       文件名字
	| @param string content    文件内容
	| @param bool   bool       文件写入选项，1为尾部追加，2为替换原内容
	-----------------------------------------------------------------------------------------*/
	public function writeFile($path, $name, $content, $bool=2) {
		$filename = $path . $name;

		$flag = false;
		if (bool == 1) {
			$flag= file_put_contents($filename, $content);
		} elseif (bool == 2) {
			$flag= file_put_contents($filename, $content, FILE_APPEND);
		}

		return $flag;
	}


	/*-----------------------------------------------------------------------------------------
	| 复制name文件从spath到dpath
	|------------------------------------------------------------------------------------------
	| @param string name         文件名
	| @param string spath        源文件目录
	| @param string dpath        目的目录
	| @param string isOverWrite  是否覆盖源文件
	-----------------------------------------------------------------------------------------*/
	public function copyFile($name, $spath, $dpath, $isOverWrite = false) {
		$filename = $spath . $name;
		$aimUrl   = $dpath . $name;
	        if (!file_exists($filename)) {
	            return false;
	        }
	        if (file_exists($aimUrl) && $isOverWrite = false) {
	            return false;
	        } elseif (file_exists($aimUrl) && $isOverWrite = true) {
	            $this->deleteFile($aimUrl);
	        }
	
	        $this->createDir($dpath);
	        copy($filename, $aimUrl);
	        return true;
	}

	/*-----------------------------------------------------------------------------------------
	| 移动name文件从spath到dpath
	|------------------------------------------------------------------------------------------
	| @param string name         文件名
	| @param string spath        源文件目录
	| @param string dpath        目的目录
	| @param string isOverWrite  是否覆盖源文件
	-----------------------------------------------------------------------------------------*/
	public function moveFile($name, $spath, $dpath, $isOverWrite = false) {
		$filename = $spath . $name;
		$aimUrl   = $dpath . $name;
        	if (!file_exists($filename)) {
            		return false;
        	}
	        if (file_exists($aimUrl) && $isOverWrite = false) {
	            return false;
	        } elseif (file_exists($aimUrl) && $isOverWrite = true) {
	            $this->deleteFile($aimUrl);
	        }

	        $this->createDir($dpath);
	        rename($filename, $aimUrl);
	        return true;
    	}


	/*----------------------------------------------------------------------------------------
	| 把filename文件重命名为newname文件
	|-----------------------------------------------------------------------------------------
	| @param string_type filename
	| @param string_type newname
	----------------------------------------------------------------------------------------*/
	public function renameFile($filename, $newname) { 
		$path = dirname($filename);
		$newfilename = $path.$newname;

		$result = false;
		if (file_exists($filename)) {
			$result = rename($filename,$newfilename);	
		}

		return $result;
	}

	/*---------------------------------------------------------------------------------------
	| 复制文件夹
        |----------------------------------------------------------------------------------------
	| @param string $oldDir
	| @param string $aimDir
	| @param boolean $overWrite 该参数控制是否覆盖原文件
	| @return boolean
	---------------------------------------------------------------------------------------*/
	public function copyDir($oldDir, $aimDir, $overWrite = false) {
	        $aimDir = str_replace('', '/', $aimDir);
	        $aimDir = substr($aimDir, -1) == '/' ? $aimDir : $aimDir . '/';
	        $oldDir = str_replace('', '/', $oldDir);
	        $oldDir = substr($oldDir, -1) == '/' ? $oldDir : $oldDir . '/';
	        if (!is_dir($oldDir)) {
	            return false;
	        }
	        if (!file_exists($aimDir)) {
	            $this->createDir($aimDir);
	        }
	        $dirHandle = opendir($oldDir);
	        while (false !== ($file = readdir($dirHandle))) {
	            if ($file == '.' || $file == '..') {
	                continue;
	            }
	            if (!is_dir($oldDir . $file)) {
	                $this->copyFile($file, $oldDir, $aimDir, $overWrite);
	            } else {
	                $this->copyDir($oldDir . $file, $aimDir . $file, $overWrite);
	            }
	        }
	        return closedir($dirHandle);
	}


    	/*---------------------------------------------------------------------------------------
    	| 移动文件夹
    	|----------------------------------------------------------------------------------------
    	| @param string $oldDir
    	| @param string $aimDir
    	| @param boolean $overWrite 该参数控制是否覆盖原文件
    	| @return boolean
    	---------------------------------------------------------------------------------------*/
    	public function moveDir($oldDir, $aimDir, $overWrite = false) {
        	$aimDir = str_replace('', '/', $aimDir);
        	$aimDir = substr($aimDir, -1) == '/' ? $aimDir : $aimDir . '/';
        	$oldDir = str_replace('', '/', $oldDir);
        	$oldDir = substr($oldDir, -1) == '/' ? $oldDir : $oldDir . '/';
        	if (!is_dir($oldDir)) {
            	return false;
        	}
        	if (!file_exists($aimDir)) {
            	$this->createDir($aimDir);
        	}
        	@ $dirHandle = opendir($oldDir);
        	if (!$dirHandle) {
            	return false;
        	}
	        while (false !== ($file = readdir($dirHandle))) {
	            if ($file == '.' || $file == '..') {
	                continue;
	            }
	            if (!is_dir($oldDir . $file)) {
	                $this->moveFile($file, $oldDir, $aimDir, $overWrite);
	            } else {
	                $this->moveDir($oldDir . $file, $aimDir . $file, $overWrite);
	            }
	        }
	        closedir($dirHandle);
	        return rmdir($oldDir);
        }

}

?>
